@model List<CodeTest.Models.Template.TemplateModel>

@{
    ViewData["Title"] = "Create Page";
}

<div class="container">
    <h2>Create Page</h2>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="pageName">Page Name</label>
                <input type="text" id="pageName" class="form-control" placeholder="Enter page name" required />
            </div>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-6">
            <div class="form-group">
                <label for="templateSelect">Select Template</label>
                <select id="templateSelect" class="form-control">
                    @foreach (var template in Model)
                    {
                        <option value="@template.Name">@template.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <button type="button" id="addTemplateBtn" class="btn btn-primary">Add Template</button>
            </div>
        </div>
    </div>

    <div class="mt-3 mb-3" id="pagePreview">
        <!-- Preview of selected templates will be added here -->
    </div>

    <div class="row mt-3">
        <div class="col-md-6">
            <button class="btn btn-success" id="createPageBtn">Create Page</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
              $(document).ready(function () {
            var selectedTemplates = [];

            // Add template to page preview
            $('#addTemplateBtn').click(function () {
                var templateName = $('#templateSelect').val();
                if (!selectedTemplates.includes(templateName)) {
                    selectedTemplates.push(templateName);

                    // Fetch template details from the server
                    fetch(`/Template/GetTemplateByName?name=${templateName}`)
                        .then(response => response.json())
                        .then(template => {
                            $('#pagePreview').append(`
                                <div class="card mt-3 mb-3" data-template="${templateName}">
                                    <div class="card-body">
                                        <h5>${templateName}</h5>
                                        <div class="template-preview">
                                            ${renderTemplatePreview(template)}
                                        </div>
                                        <button type="button" class="btn btn-danger btn-sm removeTemplateBtn">Remove</button>
                                    </div>
                                </div>
                            `);
                        })
                        .catch(error => console.error('Error fetching template:', error));
                }
            });

            // Remove template from page preview
            $(document).on('click', '.removeTemplateBtn', function () {
                var templateName = $(this).closest('.card').data('template');
                selectedTemplates = selectedTemplates.filter(t => t !== templateName);
                $(this).closest('.card').remove();
            });

            // Create page
            $('#createPageBtn').click(function () {
                var pageName = $('#pageName').val();
                if (!pageName) {
                    alert('Please enter a page name.');
                    return;
                }

                console.log('selectetemplage', selectedTemplates)

                var pageData = {
                    Name: pageName,
                    Templates: selectedTemplates.map(function(templateName) {
                        return { Name: templateName }; // Send template name, or additional data if needed
                    })
                };

                // Show loading spinner
                $('#createPageBtn').html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Creating...');

                // Save page to database
                fetch('/Template/SavePage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(pageData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = '/Template/PageList';
                    }
                })
                .catch(error => console.error('Error:', error))
                .finally(() => {
                    // Reset button text
                    $('#createPageBtn').html('Create Page');
                });
            });

            // Helper function to render template preview
            function renderTemplatePreview(template) {
                var html = '';
                console.log(template);
                template.contents.forEach(content => {
                    console.log(content);
                    if (content.Type === "heading") {
                        var headingTag = content.Level || "h1"; // Default to h1 if not specified
                        html += `<${headingTag} style="color: ${content.Color || '#000000'};">${content.Text}</${headingTag}>`;
                    }
                    else if (content.Type === "paragraph") {
                        html += `<p style="color: ${content.Color || '#000000'};">${content.Text}</p>`;
                    }
                    else if (content.Type === "card") {
                        html += `
                            <div style="border: 2px solid ${content.BorderColor || '#000000'}; background-color: ${content.Color || '#ffffff'}; padding: 10px;">
                                <h4>${content.Header}</h4>
                                <p>${content.Body}</p>
                                <footer>${content.Footer}</footer>
                            </div>`;
                    }
                    else if (content.Type === "group") {
                        html += `
                            <div class="group-container" style="margin-bottom: 20px;">
                                <${content.Level} style="color: ${content.HeadingColor};">${content.HeadingText}</${content.Level}>
                                <p style="color: ${content.ParagraphColor};">${content.ParagraphText}</p>
                            </div>`;
                    }
                    else if (content.Type === "image") {
                        html += `
                            <div style="text-align: center; margin-bottom: 20px;">
                                <img src="data:image/png;base64,${content.Image}" alt="Uploaded Image"
                                     style="width: ${content.Width || 'auto'}px; height: ${content.Height || 'auto'}px;
                                            ${content.ImageType === "rounded" ? 'border-radius: 10px;' :
                                             content.ImageType === "circle" ? 'border-radius: 50%;' : ''}" />
                                <p>${content.LogoName}</p>
                            </div>`;
                    }
                });
                return html;
            }
        });

    </script>

}